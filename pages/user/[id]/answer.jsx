import React, { useState } from "react";
import { ArrowLeftIcon } from "@chakra-ui/icons";
import {
  Box,
  Button,
  Container,
  Divider,
  Flex,
  FormControl,
  FormLabel,
  Radio,
  RadioGroup,
  Spacer,
  Stack,
  Text,
} from "@chakra-ui/react";
import Head from "next/head";
import Router, { useRouter } from "next/router";
import { useRecoilState } from "recoil";
import Header from "../../../src/components/Header";
import styles from "../../../styles/Container.module.css";
import { postsState } from "../../../src/atoms/atom";
import BackButton from "../../../src/components/atoms/button/BackButton";

const handler = (path) => {
  Router.push(path);
};

const Answer = () => {
  const [posts, setPosts] = useRecoilState(postsState);
  const [value, setValue] = useState();
  // const [yesCount, setYesCount] = useState(Number);
  // const [noCount, setNoCount] = useState(Number);
  // const [count, setCount] = useState(0);
  const router = useRouter();
  const post = posts.filter((post) => {
    return post.id === Number(router.query.id);
  });

  const handleUpdateAnswer = (id, value) => {
    const foundPost = posts.findIndex((post) => post.id === id);
    const replaceItemAtIndex = (posts, foundPost, newValue) => {
      return [
        ...posts.slice(0, foundPost),
        newValue,
        ...posts.slice(foundPost + 1),
      ];
    };

    setPosts(() => {
      return replaceItemAtIndex(posts, foundPost, {
        ...posts[foundPost],
        yes: value,
      });
    });
    router.push("/user");
  };

  return (
    <>
      <Head>
        <title>みんなの質問</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container className={styles.mainContainer}>
        <Header />
        <Container className={styles.subContainer}>
          <form>
            <Container py={["20px", "60px"]} maxW="container.lg">
              <Stack spacing={[2, 6]}>
                <FormControl>
                  <Flex direction={["column", "row"]}>
                    <Flex minW={24} width={24}>
                      <FormLabel>名前</FormLabel>
                      <Spacer />
                      <Box>:</Box>
                    </Flex>
                    <Box ml={3}>{post[0]?.name}</Box>
                  </Flex>
                </FormControl>
                <Divider borderColor="gray" borderBottomWidth="2px" />
                <FormControl>
                  <Flex direction={["column", "row"]}>
                    <Flex minW={24} width={24}>
                      <FormLabel>タイトル</FormLabel>
                      <Spacer />
                      <Box>:</Box>
                    </Flex>
                    <Box ml={3}>{post[0]?.title}</Box>
                  </Flex>
                </FormControl>
                <Divider borderColor="gray" borderBottomWidth="2px" />
                <FormControl>
                  <Flex minH={44} direction={["column", "row"]}>
                    <Flex minW={24} width={24}>
                      <FormLabel>質問内容</FormLabel>
                      <Spacer />
                      <Box>:</Box>
                    </Flex>
                    <Box ml={3}>{post[0]?.text}</Box>
                  </Flex>
                </FormControl>
                <Divider borderColor="gray" borderBottomWidth="2px" />
              </Stack>
            </Container>
            <Spacer />

            <Stack
              spacing={[1, 5]}
              direction={["column", "row"]}
              justify="center"
            >
              <RadioGroup onChange={setValue} value={value}>
                <Stack direction="row">
                  <Radio value="yes" size="lg">
                    <Text fontSize={32}>Yes</Text>
                  </Radio>
                  <Radio value="no" size="lg">
                    <Text fontSize={32}>No</Text>
                  </Radio>
                </Stack>
              </RadioGroup>
            </Stack>
            <Box pos="absolute" bottom="8" right="0">
            <BackButton onClick={() => handler("/user")}/>
              <Button
                colorScheme="linkedin"
                color="#FFFFFF"
                mr="28px"
                w="88px"
                onClick={() => handleUpdateAnswer(post[0]?.id, value)}
              >
                送信する
              </Button>
            </Box>
          </form>
        </Container>
      </Container>
    </>
  );
};

export default Answer;
