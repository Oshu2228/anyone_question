import {
  Box,
  Container,
  Divider,
  Flex,
  FormControl,
  FormLabel,
  Input,
  Spacer,
  Stack,
  Textarea,
  useToast,
} from "@chakra-ui/react";

import Head from "next/head";
import React, { useState } from "react";
import Router, { useRouter } from "next/router";
import { useRecoilState } from "recoil";
import { pushQuestion } from "../src/base/firebase";
import { postsState } from "../src/atoms/atom";
import Header from "../src/components/Header";
import BackButton from "../src/components/atoms/button/BackButton";
import SaveButton from "../src/components/atoms/button/SaveButton";

const user = () => {
  const [posts, setPosts] = useRecoilState(postsState);
  const [addName, setAddName] = useState("");
  const [addTitle, setAddTitle] = useState("");
  const [addText, setAddText] = useState("");
  const router = useRouter();
  const toast = useToast();

  const handleInputName = (e) => {
    setAddName(e.target.value);
  };
  const handleInputTitle = (e) => {
    setAddTitle(e.target.value);
  };
  const handleInputText = (e) => {
    setAddText(e.target.value);
  };

  const addId = posts[posts.length - 1].id + 1;

  const today = () => {
    const year = new Date().getFullYear() + "-";
    const month = new Date().getMonth() * 1 + 1 + "-";
    const date = new Date().getDate();
    return year + month + date;
  };

  const newQuestion = (e) => {
    e.preventDefault();
    setPosts([
      ...posts,
      {
        id: addId,
        name: addName,
        title: addTitle,
        text: addText,
        createDate: today(),
      },
    ]);

    if (addName === "" || addTitle === "" || addText === "") {
      return toast({
        title: "空欄の項目があります",
        position: "top",
        status: "warning",
        duration: 2000,
        isClosable: true,
      });
    }
    pushQuestion({
      questioner: {
        name: addName,
        title: addTitle,
        text: addText,
        createDate: today(),
      },
      count: {
        all: 10,
        yes: 6,
        no: 4,
      },
    });
    setAddName("");
    setAddTitle("");
    setAddText("");
    router.push("/user");
  };

  return (
    <>
      <Head>
        <title>みんなの質問</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container
        h="100vh"
        minH="100%"
        maxW="100%"
        bg="#DDE3DE"
        m="0"
        padding="1rem"
      >
        <Header />

        <Container minH="calc(100% - 64px)" maxW="100%" bg="white" padding="5">
          <form>
            <Container py={["20px", "60px"]} maxW="container.lg">
              <Stack spacing={[2, 6]}>
                <FormControl>
                  <Flex direction={["column", "row"]}>
                    <Flex minW={24} width={24}>
                      <FormLabel>名前</FormLabel>
                      <Spacer />
                      <Box>:</Box>
                    </Flex>
                    <Box>
                      <Input
                        ml={[0, 6]}
                        borderColor="#bebaba"
                        borderWidth="2px"
                        value={addName}
                        onChange={handleInputName}
                      />
                    </Box>
                  </Flex>
                </FormControl>
                <Divider borderColor="gray" borderBottomWidth="2px" />
                <FormControl>
                  <Flex direction={["column", "row"]}>
                    <Flex minW={24} width={24}>
                      <FormLabel>タイトル</FormLabel>
                      <Spacer />
                      <Box>:</Box>
                    </Flex>
                    <Box>
                      <Input
                        ml={[0, 6]}
                        borderColor="#bebaba"
                        borderWidth="2px"
                        value={addTitle}
                        onChange={handleInputTitle}
                      />
                    </Box>
                  </Flex>
                </FormControl>
                <Divider borderColor="gray" borderBottomWidth="2px" />
                <FormControl>
                  <Flex minH={44} direction={["column", "row"]}>
                    <Flex minW={24} width={24}>
                      <FormLabel>質問内容</FormLabel>
                      <Spacer />
                      <Box>:</Box>
                    </Flex>
                    <Textarea
                      ml={[0, 6]}
                      borderColor="#bebaba"
                      borderWidth="2px"
                      h="180px"
                      value={addText}
                      onChange={handleInputText}
                    />
                  </Flex>
                </FormControl>
                <Divider borderColor="gray" borderBottomWidth="2px" />
              </Stack>
            </Container>
            <Spacer />
            <Box pos="absolute" bottom="8" right="0">
              <BackButton />
              <SaveButton onClick={newQuestion} />
            </Box>
          </form>
        </Container>
      </Container>
    </>
  );
};

export default user;
